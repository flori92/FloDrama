#!/bin/bash

# Script de d√©ploiement des am√©liorations de s√©curit√© SSL pour FloDrama
# Ce script met √† jour la configuration CloudFront et d√©ploie les fonctions Lambda pour la s√©curit√©

echo "üîí D√©ploiement des am√©liorations de s√©curit√© SSL pour FloDrama"
echo "=============================================================="

# Couleurs pour l'identit√© visuelle FloDrama
BLUE="#3b82f6"
FUCHSIA="#d946ef"

# Fonction pour afficher les messages avec le style FloDrama
function flodrama_echo() {
  echo -e "\033[38;2;59;130;246m‚ñ∂\033[0m \033[38;2;217;70;239m$1\033[0m"
}

# V√©rifier les pr√©requis
flodrama_echo "V√©rification des pr√©requis..."
if ! command -v aws &> /dev/null; then
  echo "‚ùå AWS CLI n'est pas install√©. Veuillez l'installer et configurer vos identifiants."
  exit 1
fi

if ! command -v jq &> /dev/null; then
  echo "‚ùå jq n'est pas install√©. Veuillez l'installer pour traiter les r√©ponses JSON."
  exit 1
fi

# Param√®tres
ENVIRONMENT=${1:-production}
STACK_NAME="flodrama-distribution-$ENVIRONMENT"
LAMBDA_DIR="../src/lambda"
CLOUDFORMATION_TEMPLATE="../cloudformation/multi-tier-distribution.yaml"

# Cr√©er le r√©pertoire de build si n√©cessaire
flodrama_echo "Pr√©paration des fichiers de d√©ploiement..."
mkdir -p build

# Empaqueter les fonctions Lambda
flodrama_echo "Empaquetage de la fonction Lambda security-headers..."
cd $LAMBDA_DIR
zip -r ../../build/security-headers.zip security-headers.js
cd ../../

# D√©ployer le template CloudFormation mis √† jour
flodrama_echo "D√©ploiement du template CloudFormation avec les am√©liorations SSL..."
aws cloudformation update-stack \
  --stack-name $STACK_NAME \
  --template-body file://$CLOUDFORMATION_TEMPLATE \
  --parameters ParameterKey=Environment,ParameterValue=$ENVIRONMENT \
  --capabilities CAPABILITY_IAM

# Attendre que la mise √† jour soit termin√©e
flodrama_echo "Attente de la mise √† jour de la pile CloudFormation..."
aws cloudformation wait stack-update-complete --stack-name $STACK_NAME

# R√©cup√©rer l'ID de distribution CloudFront
flodrama_echo "R√©cup√©ration de l'ID de distribution CloudFront..."
DISTRIBUTION_ID=$(aws cloudformation describe-stacks \
  --stack-name $STACK_NAME \
  --query "Stacks[0].Outputs[?OutputKey=='CloudFrontDistributionId'].OutputValue" \
  --output text)

if [ -z "$DISTRIBUTION_ID" ]; then
  echo "‚ùå Impossible de r√©cup√©rer l'ID de distribution CloudFront."
  exit 1
fi

# Cr√©er une invalidation CloudFront pour vider le cache
flodrama_echo "Cr√©ation d'une invalidation CloudFront pour appliquer les nouvelles configurations..."
aws cloudfront create-invalidation \
  --distribution-id $DISTRIBUTION_ID \
  --paths "/*"

# D√©ployer la configuration Nginx optimis√©e si un serveur est sp√©cifi√©
if [ ! -z "$2" ]; then
  SERVER=$2
  flodrama_echo "D√©ploiement de la configuration Nginx optimis√©e sur $SERVER..."
  scp ../nginx-ssl-optimized.conf $SERVER:/etc/nginx/sites-available/flodrama.conf
  ssh $SERVER "sudo ln -sf /etc/nginx/sites-available/flodrama.conf /etc/nginx/sites-enabled/ && sudo nginx -t && sudo systemctl reload nginx"
fi

# V√©rifier la configuration SSL avec SSL Labs (simulation)
flodrama_echo "V√©rification de la configuration SSL avec SSL Labs..."
echo "Cette √©tape peut prendre quelques minutes..."
echo "Vous pouvez √©galement v√©rifier manuellement sur https://www.ssllabs.com/ssltest/analyze.html?d=flodrama.com"

# Afficher un r√©sum√© des am√©liorations
flodrama_echo "Am√©liorations de s√©curit√© SSL d√©ploy√©es avec succ√®s !"
echo "‚úÖ Protocoles SSL mis √† jour (TLSv1.2, TLSv1.3)"
echo "‚úÖ Suites de chiffrement renforc√©es"
echo "‚úÖ En-t√™tes de s√©curit√© HTTP optimis√©s"
echo "‚úÖ HSTS pr√©charg√© configur√©"
echo "‚úÖ OCSP Stapling activ√©"
echo "‚úÖ Politique de s√©curit√© du contenu (CSP) mise en place"
echo "‚úÖ Certificat avec transparence (CT) activ√©"

echo ""
echo "üéâ Votre site FloDrama devrait maintenant obtenir une note A+ sur SSL Labs !"
echo "   V√©rifiez les r√©sultats sur https://www.ssllabs.com/ssltest/analyze.html?d=flodrama.com"
