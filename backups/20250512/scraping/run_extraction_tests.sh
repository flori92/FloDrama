#!/bin/bash
# Script pour tester les extracteurs de streaming FloDrama
# Ex√©cute la passerelle m√©dia en arri√®re-plan et lance les tests

# Couleurs pour la sortie console
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ D√©marrage des tests d'extraction FloDrama${NC}"
echo -e "${YELLOW}Ce script va lancer la passerelle m√©dia en mode d√©veloppement puis ex√©cuter les tests d'extraction${NC}"

# Chemin vers les fichiers de projet
WORKER_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../workers" && pwd)"
MEDIA_GATEWAY="$WORKER_DIR/media-gateway-v2.js"
TEST_SCRIPT="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)/test_extractors.py"

# V√©rifier que les fichiers n√©cessaires existent
if [ ! -f "$MEDIA_GATEWAY" ]; then
    echo -e "${RED}‚ùå Erreur: Impossible de trouver le fichier de passerelle m√©dia:${NC}"
    echo -e "${RED}   $MEDIA_GATEWAY${NC}"
    exit 1
fi

if [ ! -f "$TEST_SCRIPT" ]; then
    echo -e "${RED}‚ùå Erreur: Impossible de trouver le script de test:${NC}"
    echo -e "${RED}   $TEST_SCRIPT${NC}"
    exit 1
fi

# V√©rifier que wrangler est install√©
if ! command -v wrangler &> /dev/null; then
    echo -e "${RED}‚ùå Erreur: wrangler n'est pas install√©. Veuillez l'installer avec:${NC}"
    echo -e "${YELLOW}npm install -g wrangler${NC}"
    exit 1
fi

# V√©rifier que Python et Playwright sont install√©s
if ! command -v python3 &> /dev/null; then
    echo -e "${RED}‚ùå Erreur: python3 n'est pas install√©${NC}"
    exit 1
fi

if ! python3 -c "import playwright" &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è Playwright n'est pas install√©. Installation...${NC}"
    pip install playwright
    python3 -m playwright install
fi

echo -e "${GREEN}‚úÖ Toutes les d√©pendances sont install√©es${NC}"

# Lancer le worker en arri√®re-plan
echo -e "${BLUE}üì° D√©marrage de la passerelle m√©dia...${NC}"
cd "$WORKER_DIR" || exit 1
nohup wrangler dev media-gateway-v2.js --port 8787 > /tmp/wrangler.log 2>&1 &
WRANGLER_PID=$!

# Attendre que le serveur d√©marre
echo -e "${YELLOW}‚è≥ Attente du d√©marrage du serveur...${NC}"
sleep 10

# V√©rifier que le serveur a d√©marr√© correctement
if ! curl -s http://localhost:8787/status > /dev/null; then
    echo -e "${RED}‚ùå Erreur: Le serveur n'a pas d√©marr√© correctement${NC}"
    echo -e "${YELLOW}Log du serveur:${NC}"
    cat /tmp/wrangler.log
    kill $WRANGLER_PID
    exit 1
fi

echo -e "${GREEN}‚úÖ Passerelle m√©dia d√©marr√©e sur http://localhost:8787${NC}"

# Ex√©cuter les tests
echo -e "${BLUE}üß™ Ex√©cution des tests d'extraction...${NC}"
python3 "$TEST_SCRIPT"

# R√©cup√©rer le code de retour
TEST_RESULT=$?

# Arr√™ter le worker
echo -e "${BLUE}üõë Arr√™t de la passerelle m√©dia...${NC}"
kill $WRANGLER_PID

# Afficher les r√©sultats
if [ -f "extractor_test_results.json" ]; then
    echo -e "${GREEN}üìä R√©sultats des tests enregistr√©s dans extractor_test_results.json${NC}"
    
    # Compter les succ√®s et √©checs
    SUCCESS_COUNT=$(grep -o '"success": true' extractor_test_results.json | wc -l)
    TOTAL_COUNT=$(grep -o '"success":' extractor_test_results.json | wc -l)
    
    if [ "$SUCCESS_COUNT" -eq "$TOTAL_COUNT" ]; then
        echo -e "${GREEN}üéâ Tous les extracteurs ($SUCCESS_COUNT/$TOTAL_COUNT) fonctionnent correctement!${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è $SUCCESS_COUNT/$TOTAL_COUNT extracteurs fonctionnent correctement${NC}"
        
        # Afficher les extracteurs en √©chec
        echo -e "${YELLOW}Extracteurs en √©chec:${NC}"
        jq -r 'to_entries[] | select(.value.success == false) | .key' extractor_test_results.json | while read -r source; do
            echo -e "${RED}  - $source${NC}"
        done
    fi
else
    echo -e "${RED}‚ùå Erreur: Fichier de r√©sultats non trouv√©${NC}"
fi

echo -e "${BLUE}‚ú® Tests termin√©s${NC}"

exit $TEST_RESULT
