import"./ui-components-DqEG6yq2.js";import{a}from"./vendor-Chun8WN8.js";class s{constructor(){if(s.instance)return s.instance;this.user=null,this.token=localStorage.getItem("auth_token"),this.refreshToken=localStorage.getItem("refresh_token"),this.tokenExpiry=localStorage.getItem("token_expiry"),s.instance=this}isAuthenticated(){return this.token?this.tokenExpiry&&new Date(this.tokenExpiry)<new Date?(this.refreshAuthToken(),!1):!0:!1}getCurrentUser(){return this.user}getAuthToken(){return this.token}async login(e,t){try{console.log(`[AuthService] Tentative de connexion pour ${e}`),await new Promise(n=>setTimeout(n,800));const o={user:{id:"user-123",email:e,name:"Utilisateur Test",avatar:"https://via.placeholder.com/150",preferences:{theme:"dark",notifications:!0}},token:"fake-jwt-token",refreshToken:"fake-refresh-token",expiresIn:3600};this.user=o.user,this.token=o.token,this.refreshToken=o.refreshToken;const r=new Date;return r.setSeconds(r.getSeconds()+o.expiresIn),this.tokenExpiry=r.toISOString(),localStorage.setItem("auth_token",this.token),localStorage.setItem("refresh_token",this.refreshToken),localStorage.setItem("token_expiry",this.tokenExpiry),o.user}catch(o){throw console.error("[AuthService] Erreur lors de la connexion:",o),new Error("Échec de la connexion: identifiants invalides")}}async register(e,t,o){try{console.log(`[AuthService] Tentative d'inscription pour ${t}`),await new Promise(c=>setTimeout(c,1e3));const r={user:{id:"user-"+Date.now(),email:t,name:e,avatar:"https://via.placeholder.com/150",preferences:{theme:"light",notifications:!0}},token:"fake-jwt-token-new-user",refreshToken:"fake-refresh-token-new-user",expiresIn:3600};this.user=r.user,this.token=r.token,this.refreshToken=r.refreshToken;const n=new Date;return n.setSeconds(n.getSeconds()+r.expiresIn),this.tokenExpiry=n.toISOString(),localStorage.setItem("auth_token",this.token),localStorage.setItem("refresh_token",this.refreshToken),localStorage.setItem("token_expiry",this.tokenExpiry),r.user}catch(r){throw console.error("[AuthService] Erreur lors de l'inscription:",r),new Error("Échec de l'inscription: veuillez réessayer")}}async logout(){try{return console.log("[AuthService] Déconnexion de l'utilisateur"),this.user=null,this.token=null,this.refreshToken=null,this.tokenExpiry=null,localStorage.removeItem("auth_token"),localStorage.removeItem("refresh_token"),localStorage.removeItem("token_expiry"),!0}catch(e){throw console.error("[AuthService] Erreur lors de la déconnexion:",e),new Error("Échec de la déconnexion")}}async refreshAuthToken(){if(!this.refreshToken)return!1;try{console.log("[AuthService] Rafraîchissement du token"),await new Promise(o=>setTimeout(o,500));const e={token:"new-fake-jwt-token",expiresIn:3600};this.token=e.token;const t=new Date;return t.setSeconds(t.getSeconds()+e.expiresIn),this.tokenExpiry=t.toISOString(),localStorage.setItem("auth_token",this.token),localStorage.setItem("token_expiry",this.tokenExpiry),!0}catch(e){return console.error("[AuthService] Erreur lors du rafraîchissement du token:",e),this.logout(),!1}}async resetPassword(e){try{return console.log(`[AuthService] Demande de réinitialisation de mot de passe pour ${e}`),await new Promise(t=>setTimeout(t,800)),!0}catch(t){throw console.error("[AuthService] Erreur lors de la réinitialisation du mot de passe:",t),new Error("Échec de la demande de réinitialisation")}}async verifyEmail(e){try{return console.log(`[AuthService] Vérification de l'email avec le token: ${e}`),await new Promise(t=>setTimeout(t,800)),!0}catch(t){throw console.error("[AuthService] Erreur lors de la vérification de l'email:",t),new Error("Échec de la vérification de l'email")}}}const k=new s,l=a.createContext({user:null,isAuthenticated:!1,isLoading:!0,login:()=>{},logout:()=>{},register:()=>{},error:null}),d=()=>{const i=a.useContext(l);if(!i)throw new Error("useAuth doit être utilisé à l'intérieur d'un AuthProvider");return i};export{k as A,d as u};
//# sourceMappingURL=auth-CvLoGRuB.js.map
