{"version":3,"file":"VideoPlayerPage-C1DRDeBx.js","sources":["../../node_modules/lucide-react/dist/esm/icons/maximize.js","../../node_modules/lucide-react/dist/esm/icons/minimize.js","../../node_modules/lucide-react/dist/esm/icons/pause.js","../../node_modules/lucide-react/dist/esm/icons/skip-back.js","../../node_modules/lucide-react/dist/esm/icons/skip-forward.js","../../node_modules/lucide-react/dist/esm/icons/type.js","../../node_modules/lucide-react/dist/esm/icons/volume-2.js","../../node_modules/lucide-react/dist/esm/icons/volume-x.js","../../src/components/social/CreateWatchPartyModal.jsx","../../src/pages/VideoPlayerPage.jsx"],"sourcesContent":["/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Maximize = createLucideIcon(\"Maximize\", [\n  [\"path\", { d: \"M8 3H5a2 2 0 0 0-2 2v3\", key: \"1dcmit\" }],\n  [\"path\", { d: \"M21 8V5a2 2 0 0 0-2-2h-3\", key: \"1e4gt3\" }],\n  [\"path\", { d: \"M3 16v3a2 2 0 0 0 2 2h3\", key: \"wsl5sc\" }],\n  [\"path\", { d: \"M16 21h3a2 2 0 0 0 2-2v-3\", key: \"18trek\" }]\n]);\n\nexport { Maximize as default };\n//# sourceMappingURL=maximize.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Minimize = createLucideIcon(\"Minimize\", [\n  [\"path\", { d: \"M8 3v3a2 2 0 0 1-2 2H3\", key: \"hohbtr\" }],\n  [\"path\", { d: \"M21 8h-3a2 2 0 0 1-2-2V3\", key: \"5jw1f3\" }],\n  [\"path\", { d: \"M3 16h3a2 2 0 0 1 2 2v3\", key: \"198tvr\" }],\n  [\"path\", { d: \"M16 21v-3a2 2 0 0 1 2-2h3\", key: \"ph8mxp\" }]\n]);\n\nexport { Minimize as default };\n//# sourceMappingURL=minimize.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Pause = createLucideIcon(\"Pause\", [\n  [\"rect\", { width: \"4\", height: \"16\", x: \"6\", y: \"4\", key: \"iffhe4\" }],\n  [\"rect\", { width: \"4\", height: \"16\", x: \"14\", y: \"4\", key: \"sjin7j\" }]\n]);\n\nexport { Pause as default };\n//# sourceMappingURL=pause.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst SkipBack = createLucideIcon(\"SkipBack\", [\n  [\"polygon\", { points: \"19 20 9 12 19 4 19 20\", key: \"o2sva\" }],\n  [\"line\", { x1: \"5\", x2: \"5\", y1: \"19\", y2: \"5\", key: \"1ocqjk\" }]\n]);\n\nexport { SkipBack as default };\n//# sourceMappingURL=skip-back.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst SkipForward = createLucideIcon(\"SkipForward\", [\n  [\"polygon\", { points: \"5 4 15 12 5 20 5 4\", key: \"16p6eg\" }],\n  [\"line\", { x1: \"19\", x2: \"19\", y1: \"5\", y2: \"19\", key: \"futhcm\" }]\n]);\n\nexport { SkipForward as default };\n//# sourceMappingURL=skip-forward.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Type = createLucideIcon(\"Type\", [\n  [\"polyline\", { points: \"4 7 4 4 20 4 20 7\", key: \"1nosan\" }],\n  [\"line\", { x1: \"9\", x2: \"15\", y1: \"20\", y2: \"20\", key: \"swin9y\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"4\", y2: \"20\", key: \"1tx1rr\" }]\n]);\n\nexport { Type as default };\n//# sourceMappingURL=type.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Volume2 = createLucideIcon(\"Volume2\", [\n  [\"polygon\", { points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\", key: \"16drj5\" }],\n  [\"path\", { d: \"M15.54 8.46a5 5 0 0 1 0 7.07\", key: \"ltjumu\" }],\n  [\"path\", { d: \"M19.07 4.93a10 10 0 0 1 0 14.14\", key: \"1kegas\" }]\n]);\n\nexport { Volume2 as default };\n//# sourceMappingURL=volume-2.js.map\n","/**\n * lucide-react v0.258.0 - ISC\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst VolumeX = createLucideIcon(\"VolumeX\", [\n  [\"polygon\", { points: \"11 5 6 9 2 9 2 15 6 15 11 19 11 5\", key: \"16drj5\" }],\n  [\"line\", { x1: \"22\", x2: \"16\", y1: \"9\", y2: \"15\", key: \"1ewh16\" }],\n  [\"line\", { x1: \"16\", x2: \"22\", y1: \"9\", y2: \"15\", key: \"5ykzw1\" }]\n]);\n\nexport { VolumeX as default };\n//# sourceMappingURL=volume-x.js.map\n","import React, { useState } from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  FormHelperText,\n  Switch,\n  FormControlLabel,\n  Typography,\n  Box\n} from '@mui/material';\n\n/**\n * Modal pour créer une nouvelle soirée de visionnage (Watch Party)\n * Permet de configurer les paramètres de la soirée et d'inviter des amis\n */\nconst CreateWatchPartyModal = ({ open, onClose, onCreateParty, contentId, contentTitle }) => {\n  // État du formulaire\n  const [partyName, setPartyName] = useState(`Soirée ${contentTitle || 'de visionnage'}`);\n  const [isPublic, setIsPublic] = useState(false);\n  const [maxParticipants, setMaxParticipants] = useState(5);\n  const [description, setDescription] = useState('');\n  const [errors, setErrors] = useState({});\n\n  // Validation du formulaire\n  const validateForm = () => {\n    const newErrors = {};\n    \n    if (!partyName.trim()) {\n      newErrors.partyName = 'Le nom de la soirée est requis';\n    }\n    \n    if (maxParticipants < 2 || maxParticipants > 10) {\n      newErrors.maxParticipants = 'Le nombre de participants doit être entre 2 et 10';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  // Soumission du formulaire\n  const handleSubmit = () => {\n    if (validateForm()) {\n      onCreateParty({\n        name: partyName,\n        contentId,\n        isPublic,\n        maxParticipants,\n        description: description.trim() || `Soirée de visionnage pour ${contentTitle}`,\n        createdAt: new Date().toISOString()\n      });\n      onClose();\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\n      <DialogTitle>Créer une soirée de visionnage</DialogTitle>\n      \n      <DialogContent>\n        <Box sx={{ mt: 2 }}>\n          <TextField\n            fullWidth\n            label=\"Nom de la soirée\"\n            value={partyName}\n            onChange={(e) => setPartyName(e.target.value)}\n            error={!!errors.partyName}\n            helperText={errors.partyName}\n            margin=\"normal\"\n          />\n          \n          <TextField\n            fullWidth\n            label=\"Description (optionnelle)\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            multiline\n            rows={3}\n            margin=\"normal\"\n          />\n          \n          <FormControl fullWidth margin=\"normal\" error={!!errors.maxParticipants}>\n            <InputLabel>Nombre maximum de participants</InputLabel>\n            <Select\n              value={maxParticipants}\n              onChange={(e) => setMaxParticipants(Number(e.target.value))}\n              label=\"Nombre maximum de participants\"\n            >\n              {[2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => (\n                <MenuItem key={num} value={num}>\n                  {num} participants\n                </MenuItem>\n              ))}\n            </Select>\n            {errors.maxParticipants && (\n              <FormHelperText>{errors.maxParticipants}</FormHelperText>\n            )}\n          </FormControl>\n          \n          <Box sx={{ mt: 2 }}>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={isPublic}\n                  onChange={(e) => setIsPublic(e.target.checked)}\n                  color=\"primary\"\n                />\n              }\n              label=\"Soirée publique\"\n            />\n            <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\">\n              Les soirées publiques peuvent être rejointes par n'importe quel utilisateur de FloDrama\n            </Typography>\n          </Box>\n        </Box>\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={onClose} color=\"inherit\">\n          Annuler\n        </Button>\n        <Button onClick={handleSubmit} color=\"primary\" variant=\"contained\">\n          Créer la soirée\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default CreateWatchPartyModal;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { Play, Pause, Volume2, VolumeX, Maximize, Minimize, \n         SkipForward, SkipBack, Settings, X, Type, Users } from 'lucide-react';\nimport { useMetadata } from '../hooks/useMetadata';\nimport { getAssetUrl, getVideoUrl } from '../api/metadata';\nimport ContentCard from '../components/cards/ContentCard';\nimport CreateWatchPartyModal from '../components/social/CreateWatchPartyModal';\n\n/**\n * Page de lecteur vidéo pour regarder un contenu\n */\nconst VideoPlayerPage = () => {\n  const { type, id } = useParams();\n  const navigate = useNavigate();\n  const videoRef = useRef(null);\n  const playerRef = useRef(null);\n  const progressBarRef = useRef(null);\n  const timeoutRef = useRef(null);\n  \n  const { getItemById, getRecommendations, isLoading, error: errorMetadata } = useMetadata();\n  \n  // États du lecteur vidéo\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [duration, setDuration] = useState(0);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n  const [showControls, setShowControls] = useState(true);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showSubtitlesMenu, setShowSubtitlesMenu] = useState(false);\n  const [quality, setQuality] = useState('auto');\n  \n  // États du contenu\n  const [episodeData, setEpisodeData] = useState(null);\n  const [currentEpisode, setCurrentEpisode] = useState(1);\n  const [recommendations, setRecommendations] = useState([]);\n  \n  // État pour le modal de création de soirée de visionnage\n  const [watchPartyModalOpen, setWatchPartyModalOpen] = useState(false);\n  \n  // États des sous-titres\n  const [subtitles, setSubtitles] = useState([\n    { id: 'off', label: 'Désactivés', language: 'off', src: '', enabled: true },\n    { id: 'fr', label: 'Français', language: 'fr', src: '/subtitles/fr.vtt', enabled: false },\n    { id: 'en', label: 'Anglais', language: 'en', src: '/subtitles/en.vtt', enabled: false },\n    { id: 'es', label: 'Espagnol', language: 'es', src: '/subtitles/es.vtt', enabled: false },\n  ]);\n  const [currentSubtitle, setCurrentSubtitle] = useState('off');\n  \n  // Navigation entre les épisodes\n  const goToEpisode = useCallback((ep) => {\n    if (ep >= 1 && ep <= (episodeData?.episodes || 1)) {\n      setCurrentEpisode(ep);\n      // Réinitialiser le lecteur\n      setCurrentTime(0);\n      setIsPlaying(false);\n      \n      // Lecture automatique après un court délai\n      setTimeout(() => {\n        const video = videoRef.current;\n        if (video) {\n          video.play()\n            .then(() => setIsPlaying(true))\n            .catch(err => console.error('Erreur de lecture:', err));\n        }\n      }, 500);\n    }\n  }, [episodeData]);\n  \n  // Charger les données du contenu\n  useEffect(() => {\n    if (isLoading || errorMetadata) return;\n    \n    const contentItem = getItemById(id);\n    if (contentItem) {\n      setEpisodeData(contentItem);\n      \n      // Récupérer les recommandations\n      const recs = getRecommendations(id);\n      if (recs.length > 0) {\n        setRecommendations(recs[0].items || []);\n      }\n      \n      // Charger les sous-titres disponibles pour ce contenu\n      // Dans une application réelle, cela viendrait de l'API\n      if (contentItem.subtitles) {\n        setSubtitles(prev => {\n          const newSubtitles = [...prev];\n          newSubtitles[0].enabled = true; // Option \"Désactivés\" toujours disponible\n          \n          // Activer les sous-titres disponibles\n          contentItem.subtitles.forEach(sub => {\n            const index = newSubtitles.findIndex(s => s.language === sub.language);\n            if (index !== -1) {\n              newSubtitles[index].enabled = true;\n              newSubtitles[index].src = sub.src || newSubtitles[index].src;\n            }\n          });\n          \n          return newSubtitles;\n        });\n      }\n    }\n  }, [id, isLoading, errorMetadata, getItemById, getRecommendations]);\n  \n  // Gérer la lecture automatique et les événements du lecteur\n  useEffect(() => {\n    const videoElement = videoRef.current;\n    if (!videoElement) return;\n    \n    // Lecture automatique après un court délai\n    const autoplayTimeout = setTimeout(() => {\n      videoElement.play()\n        .then(() => setIsPlaying(true))\n        .catch(err => console.error('Erreur de lecture automatique:', err));\n    }, 1500);\n    \n    // Gestionnaires d'événements\n    const handleTimeUpdate = () => {\n      setCurrentTime(videoElement.currentTime);\n    };\n    \n    const handleDurationChange = () => {\n      setDuration(videoElement.duration);\n    };\n    \n    const handlePlay = () => {\n      setIsPlaying(true);\n    };\n    \n    const handlePause = () => {\n      setIsPlaying(false);\n    };\n    \n    const handleVolumeChange = () => {\n      setVolume(videoElement.volume);\n      setIsMuted(videoElement.muted);\n    };\n    \n    const handleEnded = () => {\n      setIsPlaying(false);\n      // Si c'est une série et qu'il y a un épisode suivant\n      if (episodeData && episodeData.episodes && currentEpisode < episodeData.episodes) {\n        // Passer à l'épisode suivant après 5 secondes\n        setTimeout(() => {\n          goToEpisode(currentEpisode + 1);\n        }, 5000);\n      }\n    };\n    \n    // Ajouter les écouteurs d'événements\n    videoElement.addEventListener('timeupdate', handleTimeUpdate);\n    videoElement.addEventListener('durationchange', handleDurationChange);\n    videoElement.addEventListener('play', handlePlay);\n    videoElement.addEventListener('pause', handlePause);\n    videoElement.addEventListener('volumechange', handleVolumeChange);\n    videoElement.addEventListener('ended', handleEnded);\n    \n    // Nettoyage\n    return () => {\n      clearTimeout(autoplayTimeout);\n      if (videoElement) {\n        videoElement.removeEventListener('timeupdate', handleTimeUpdate);\n        videoElement.removeEventListener('durationchange', handleDurationChange);\n        videoElement.removeEventListener('play', handlePlay);\n        videoElement.removeEventListener('pause', handlePause);\n        videoElement.removeEventListener('volumechange', handleVolumeChange);\n        videoElement.removeEventListener('ended', handleEnded);\n      }\n    };\n  }, [episodeData, currentEpisode, goToEpisode]);\n  \n  // Gérer l'affichage des contrôles\n  useEffect(() => {\n    const handleMouseMove = () => {\n      setShowControls(true);\n      \n      // Réinitialiser le délai\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n      \n      // Masquer les contrôles après 3 secondes d'inactivité\n      timeoutRef.current = setTimeout(() => {\n        if (isPlaying) {\n          setShowControls(false);\n          setShowSettings(false);\n          setShowSubtitlesMenu(false);\n        }\n      }, 3000);\n    };\n    \n    const container = playerRef.current;\n    if (container) {\n      container.addEventListener('mousemove', handleMouseMove);\n      container.addEventListener('touchstart', handleMouseMove);\n    }\n    \n    return () => {\n      if (container) {\n        container.removeEventListener('mousemove', handleMouseMove);\n        container.removeEventListener('touchstart', handleMouseMove);\n      }\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [isPlaying]);\n  \n  // Gérer le plein écran\n  const toggleFullscreen = () => {\n    const container = playerRef.current;\n    \n    if (!document.fullscreenElement) {\n      container.requestFullscreen().then(() => {\n        setIsFullscreen(true);\n      }).catch(err => {\n        console.error('Erreur lors du passage en plein écran:', err);\n      });\n    } else {\n      document.exitFullscreen().then(() => {\n        setIsFullscreen(false);\n      }).catch(err => {\n        console.error('Erreur lors de la sortie du plein écran:', err);\n      });\n    }\n  };\n  \n  // Formater le temps (secondes -> MM:SS)\n  const formatTime = (timeInSeconds) => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  \n  // Contrôles de lecture\n  const togglePlay = () => {\n    const video = videoRef.current;\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  \n  const toggleMute = () => {\n    const video = videoRef.current;\n    video.muted = !video.muted;\n    setIsMuted(!isMuted);\n  };\n  \n  const handleVolumeChange = (e) => {\n    const newVolume = parseFloat(e.target.value);\n    const video = videoRef.current;\n    video.volume = newVolume;\n    setVolume(newVolume);\n    setIsMuted(newVolume === 0);\n  };\n  \n  const handleProgressChange = (e) => {\n    const newTime = parseFloat(e.target.value);\n    const video = videoRef.current;\n    video.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  \n  const handleProgressClick = (e) => {\n    const progressBar = progressBarRef.current;\n    const rect = progressBar.getBoundingClientRect();\n    const pos = (e.clientX - rect.left) / progressBar.offsetWidth;\n    const newTime = pos * duration;\n    \n    const video = videoRef.current;\n    video.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  \n  // Changer la qualité vidéo\n  const handleQualityChange = (newQuality) => {\n    setQuality(newQuality);\n    setShowSettings(false);\n    \n    // Sauvegarder la position actuelle\n    const currentPos = videoRef.current.currentTime;\n    \n    // Appliquer la nouvelle qualité (dans une application réelle, cela changerait la source)\n    setTimeout(() => {\n      videoRef.current.currentTime = currentPos;\n      if (isPlaying) {\n        videoRef.current.play();\n      }\n    }, 100);\n  };\n  \n  // Changer les sous-titres\n  const handleSubtitleChange = (subtitleId) => {\n    setCurrentSubtitle(subtitleId);\n    setShowSubtitlesMenu(false);\n    \n    // Désactiver tous les tracks de sous-titres\n    const video = videoRef.current;\n    if (video) {\n      Array.from(video.textTracks).forEach(track => {\n        track.mode = 'disabled';\n      });\n      \n      // Activer le track sélectionné\n      if (subtitleId !== 'off') {\n        const selectedTrack = Array.from(video.textTracks).find(track => track.language === subtitleId);\n        if (selectedTrack) {\n          selectedTrack.mode = 'showing';\n        }\n      }\n    }\n  };\n  \n  // Obtenir le libellé du sous-titre actuel\n  const getCurrentSubtitleLabel = () => {\n    const subtitle = subtitles.find(sub => sub.id === currentSubtitle);\n    return subtitle ? subtitle.label : 'Désactivés';\n  };\n  \n  // Afficher un état de chargement\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-black\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-red-600 mx-auto\"></div>\n          <p className=\"mt-4 text-white\">Chargement de la vidéo...</p>\n        </div>\n      </div>\n    );\n  }\n  \n  // Afficher une erreur si nécessaire\n  if (errorMetadata || !episodeData) {\n    return (\n      <div className=\"flex items-center justify-center h-screen bg-black\">\n        <div className=\"text-center\">\n          <div className=\"text-red-600 text-5xl mb-4\">⚠️</div>\n          <h1 className=\"text-2xl font-bold text-white mb-2\">Vidéo non disponible</h1>\n          <p className=\"text-gray-400 mb-6\">{errorMetadata || \"Cette vidéo n'existe pas ou a été supprimée.\"}</p>\n          <button \n            className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded font-medium\"\n            onClick={() => navigate('/')}\n          >\n            Retour à l'accueil\n          </button>\n        </div>\n      </div>\n    );\n  }\n  \n  // Déterminer la source vidéo\n  const getVideoSource = () => {\n    // Pour les séries\n    if (episodeData.episodes && episodeData.episodes > 1) {\n      return episodeData.episode_videos && episodeData.episode_videos[currentEpisode - 1]\n        ? getVideoUrl(episodeData.episode_videos[currentEpisode - 1])\n        : getVideoUrl(`${episodeData.id}/episode${currentEpisode}.mp4`);\n    }\n    \n    // Pour les films\n    return episodeData.video ? getVideoUrl(episodeData.video) : getVideoUrl(`${episodeData.id}/movie.mp4`);\n  };\n  \n  // Animations\n  const controlsVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0, transition: { duration: 0.3 } }\n  };\n  \n  const infoVariants = {\n    hidden: { opacity: 0, x: -20 },\n    visible: { opacity: 1, x: 0, transition: { duration: 0.3 } }\n  };\n  \n  return (\n    <div className=\"bg-black h-screen w-screen overflow-hidden\">\n      {/* Conteneur du lecteur vidéo */}\n      <div \n        ref={playerRef}\n        className=\"relative h-full w-full\"\n        onClick={() => {\n          if (!showSettings && !showSubtitlesMenu) {\n            togglePlay();\n          }\n        }}\n      >\n        {/* Vidéo */}\n        <video\n          ref={videoRef}\n          className=\"h-full w-full object-contain\"\n          src={getVideoSource()}\n          poster={getAssetUrl(episodeData.banner || episodeData.poster)}\n          preload=\"auto\"\n          onClick={e => e.stopPropagation()}\n        >\n          {/* Pistes de sous-titres */}\n          {subtitles.filter(sub => sub.id !== 'off' && sub.enabled).map(subtitle => (\n            <track \n              key={subtitle.id}\n              kind=\"subtitles\"\n              src={subtitle.src}\n              srcLang={subtitle.language}\n              label={subtitle.label}\n              default={subtitle.id === currentSubtitle}\n            />\n          ))}\n        </video>\n        \n        {/* Overlay pour les contrôles */}\n        {showControls && (\n          <motion.div \n            className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black bg-opacity-50\"\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"hidden\"\n            variants={controlsVariants}\n          >\n            {/* Bouton retour */}\n            <div className=\"absolute top-4 left-4 z-10\">\n              <button \n                className=\"text-white hover:text-red-500 transition-colors\"\n                onClick={() => navigate(`/${type}/${id}`)}\n              >\n                <X size={24} />\n              </button>\n            </div>\n            \n            {/* Informations sur le contenu */}\n            <motion.div \n              className=\"absolute top-4 left-16 z-10\"\n              variants={infoVariants}\n            >\n              <h1 className=\"text-xl font-bold text-white\">{episodeData.title}</h1>\n              {episodeData.episodes && episodeData.episodes > 1 && (\n                <p className=\"text-gray-300\">Épisode {currentEpisode}</p>\n              )}\n            </motion.div>\n            \n            {/* Contrôles principaux */}\n            <div className=\"absolute bottom-0 left-0 right-0 p-4\">\n              {/* Barre de progression */}\n              <div \n                ref={progressBarRef}\n                className=\"w-full h-1 bg-gray-600 rounded-full mb-4 cursor-pointer\"\n                onClick={handleProgressClick}\n              >\n                <div \n                  className=\"h-full bg-red-600 rounded-full relative\"\n                  style={{ width: `${(currentTime / duration) * 100}%` }}\n                >\n                  <div className=\"absolute right-0 top-1/2 transform -translate-y-1/2 w-3 h-3 bg-red-600 rounded-full\"></div>\n                </div>\n                <input\n                  type=\"range\"\n                  min=\"0\"\n                  max={duration || 100}\n                  value={currentTime}\n                  onChange={handleProgressChange}\n                  className=\"absolute inset-0 w-full opacity-0 cursor-pointer\"\n                />\n              </div>\n              \n              {/* Boutons de contrôle */}\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-4\">\n                  {/* Lecture/Pause */}\n                  <button \n                    className=\"text-white hover:text-red-500 transition-colors\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      togglePlay();\n                    }}\n                  >\n                    {isPlaying ? <Pause size={24} /> : <Play size={24} />}\n                  </button>\n                  \n                  {/* Épisode précédent (pour les séries) */}\n                  {episodeData.episodes && episodeData.episodes > 1 && (\n                    <button \n                      className={`text-white hover:text-red-500 transition-colors ${\n                        currentEpisode <= 1 ? 'opacity-50 cursor-not-allowed' : ''\n                      }`}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (currentEpisode > 1) {\n                          goToEpisode(currentEpisode - 1);\n                        }\n                      }}\n                      disabled={currentEpisode <= 1}\n                    >\n                      <SkipBack size={20} />\n                    </button>\n                  )}\n                  \n                  {/* Épisode suivant (pour les séries) */}\n                  {episodeData.episodes && episodeData.episodes > 1 && (\n                    <button \n                      className={`text-white hover:text-red-500 transition-colors ${\n                        currentEpisode >= episodeData.episodes ? 'opacity-50 cursor-not-allowed' : ''\n                      }`}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        if (currentEpisode < episodeData.episodes) {\n                          goToEpisode(currentEpisode + 1);\n                        }\n                      }}\n                      disabled={currentEpisode >= episodeData.episodes}\n                    >\n                      <SkipForward size={20} />\n                    </button>\n                  )}\n                  \n                  {/* Volume */}\n                  <div className=\"flex items-center space-x-2\">\n                    <button \n                      className=\"text-white hover:text-red-500 transition-colors\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        toggleMute();\n                      }}\n                    >\n                      {isMuted ? <VolumeX size={20} /> : <Volume2 size={20} />}\n                    </button>\n                    <input\n                      type=\"range\"\n                      min=\"0\"\n                      max=\"1\"\n                      step=\"0.1\"\n                      value={isMuted ? 0 : volume}\n                      onChange={handleVolumeChange}\n                      className=\"w-20 accent-red-600\"\n                      onClick={e => e.stopPropagation()}\n                    />\n                  </div>\n                  \n                  {/* Temps */}\n                  <div className=\"text-white text-sm\">\n                    {formatTime(currentTime)} / {formatTime(duration)}\n                  </div>\n                </div>\n                \n                <div className=\"flex items-center space-x-4\">\n                  {/* Sous-titres */}\n                  <div className=\"relative\">\n                    <button \n                      className=\"text-white hover:text-red-500 transition-colors flex items-center space-x-1\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setShowSubtitlesMenu(!showSubtitlesMenu);\n                        setShowSettings(false);\n                      }}\n                    >\n                      <Type size={20} />\n                      <span className=\"text-sm hidden sm:inline\">{getCurrentSubtitleLabel()}</span>\n                    </button>\n                    \n                    {/* Menu des sous-titres */}\n                    {showSubtitlesMenu && (\n                      <motion.div \n                        className=\"absolute bottom-full right-0 mb-2 bg-gray-900 rounded-lg shadow-lg p-4 w-48\"\n                        initial={{ opacity: 0, y: 10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        exit={{ opacity: 0, y: 10 }}\n                        transition={{ duration: 0.2 }}\n                        onClick={e => e.stopPropagation()}\n                      >\n                        <div className=\"text-white font-medium mb-2\">Sous-titres</div>\n                        \n                        {subtitles.filter(sub => sub.enabled).map(subtitle => (\n                          <button \n                            key={subtitle.id}\n                            className={`flex items-center justify-between w-full py-2 px-2 rounded ${\n                              currentSubtitle === subtitle.id \n                                ? 'bg-red-600 text-white' \n                                : 'text-gray-300 hover:bg-gray-800 hover:text-white'\n                            }`}\n                            onClick={() => handleSubtitleChange(subtitle.id)}\n                          >\n                            {subtitle.label}\n                          </button>\n                        ))}\n                      </motion.div>\n                    )}\n                  </div>\n                  \n                  {/* Soirée de visionnage */}\n                  <div className=\"relative\">\n                    <button \n                      className=\"text-white hover:text-red-500 transition-colors\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setWatchPartyModalOpen(true);\n                        setShowSettings(false);\n                        setShowSubtitlesMenu(false);\n                      }}\n                    >\n                      <Users size={20} />\n                    </button>\n                  </div>\n                  \n                  {/* Paramètres */}\n                  <div className=\"relative\">\n                    <button \n                      className=\"text-white hover:text-red-500 transition-colors\"\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        setShowSettings(!showSettings);\n                        setShowSubtitlesMenu(false);\n                      }}\n                    >\n                      <Settings size={20} />\n                    </button>\n                    \n                    {/* Menu des paramètres */}\n                    {showSettings && (\n                      <motion.div \n                        className=\"absolute bottom-full right-0 mb-2 bg-gray-900 rounded-lg shadow-lg p-4 w-48\"\n                        initial={{ opacity: 0, y: 10 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        exit={{ opacity: 0, y: 10 }}\n                        transition={{ duration: 0.2 }}\n                        onClick={e => e.stopPropagation()}\n                      >\n                        <div className=\"text-white font-medium mb-2\">Paramètres</div>\n                        \n                        {/* Option de qualité */}\n                        <div className=\"relative\">\n                          <button \n                            className=\"flex items-center justify-between w-full text-gray-300 hover:text-white py-2\"\n                            onClick={() => handleQualityChange('auto')}\n                          >\n                            <span>Qualité</span>\n                            <span className=\"flex items-center\">\n                              {quality}\n                            </span>\n                          </button>\n                        </div>\n                        \n                        {/* Vitesse de lecture */}\n                        <button className=\"flex items-center justify-between w-full text-gray-300 hover:text-white py-2\">\n                          <span>Vitesse</span>\n                          <span>1x</span>\n                        </button>\n                      </motion.div>\n                    )}\n                  </div>\n                  \n                  {/* Plein écran */}\n                  <button \n                    className=\"text-white hover:text-red-500 transition-colors\"\n                    onClick={(e) => {\n                      e.stopPropagation();\n                      toggleFullscreen();\n                    }}\n                  >\n                    {isFullscreen ? <Minimize size={20} /> : <Maximize size={20} />}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </motion.div>\n        )}\n        \n        {/* Overlay de fin de vidéo */}\n        {currentTime > 0 && currentTime >= duration - 0.5 && (\n          <motion.div \n            className=\"absolute inset-0 bg-black bg-opacity-80 flex flex-col items-center justify-center\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5 }}\n          >\n            <h2 className=\"text-2xl font-bold text-white mb-4\">\n              {episodeData.episodes && currentEpisode < episodeData.episodes \n                ? \"Prochain épisode dans 5 secondes...\" \n                : \"Fin du contenu\"}\n            </h2>\n            \n            {episodeData.episodes && currentEpisode < episodeData.episodes ? (\n              <div className=\"flex space-x-4\">\n                <button \n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded font-medium\"\n                  onClick={() => goToEpisode(currentEpisode + 1)}\n                >\n                  Regarder maintenant\n                </button>\n                <button \n                  className=\"bg-gray-700 hover:bg-gray-600 text-white px-6 py-2 rounded font-medium\"\n                  onClick={() => setCurrentTime(0)}\n                >\n                  Revoir\n                </button>\n              </div>\n            ) : (\n              <div className=\"flex space-x-4\">\n                <button \n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-2 rounded font-medium\"\n                  onClick={() => navigate(`/${type}/${id}`)}\n                >\n                  Détails\n                </button>\n                <button \n                  className=\"bg-gray-700 hover:bg-gray-600 text-white px-6 py-2 rounded font-medium\"\n                  onClick={() => setCurrentTime(0)}\n                >\n                  Revoir\n                </button>\n              </div>\n            )}\n            \n            {/* Recommandations */}\n            {recommendations.length > 0 && (\n              <div className=\"mt-12 w-full max-w-4xl\">\n                <h3 className=\"text-xl font-bold text-white mb-4\">Recommandations</h3>\n                <div className=\"flex space-x-4 overflow-x-auto pb-4\">\n                  {recommendations.slice(0, 5).map((rec, index) => (\n                    <ContentCard key={rec.id} item={rec} size=\"sm\" index={index} />\n                  ))}\n                </div>\n              </div>\n            )}\n          </motion.div>\n        )}\n      </div>\n      \n      {/* Modal de création de soirée de visionnage */}\n      <CreateWatchPartyModal\n        open={watchPartyModalOpen}\n        onClose={() => setWatchPartyModalOpen(false)}\n        contentId={id}\n        contentTitle={episodeData?.title}\n      />\n    </div>\n  );\n};\n\nexport default VideoPlayerPage;\n"],"names":["Maximize","createLucideIcon","Minimize","Pause","SkipBack","SkipForward","Type","Volume2","VolumeX","CreateWatchPartyModal","open","onClose","onCreateParty","contentId","contentTitle","partyName","setPartyName","useState","isPublic","setIsPublic","maxParticipants","setMaxParticipants","description","setDescription","errors","setErrors","validateForm","newErrors","handleSubmit","Dialog","jsx","DialogTitle","DialogContent","jsxs","Box","TextField","e","FormControl","InputLabel","Select","num","MenuItem","FormHelperText","FormControlLabel","Switch","Typography","DialogActions","Button","VideoPlayerPage","type","id","useParams","navigate","useNavigate","videoRef","useRef","playerRef","progressBarRef","timeoutRef","getItemById","getRecommendations","isLoading","errorMetadata","useMetadata","isPlaying","setIsPlaying","duration","setDuration","currentTime","setCurrentTime","volume","setVolume","isMuted","setIsMuted","isFullscreen","setIsFullscreen","showControls","setShowControls","showSettings","setShowSettings","showSubtitlesMenu","setShowSubtitlesMenu","quality","setQuality","episodeData","setEpisodeData","currentEpisode","setCurrentEpisode","recommendations","setRecommendations","watchPartyModalOpen","setWatchPartyModalOpen","subtitles","setSubtitles","currentSubtitle","setCurrentSubtitle","goToEpisode","useCallback","ep","video","err","useEffect","contentItem","recs","prev","newSubtitles","sub","index","s","videoElement","autoplayTimeout","handleTimeUpdate","handleDurationChange","handlePlay","handlePause","handleVolumeChange","handleEnded","handleMouseMove","container","toggleFullscreen","formatTime","timeInSeconds","minutes","seconds","togglePlay","toggleMute","newVolume","handleProgressChange","newTime","handleProgressClick","progressBar","rect","handleQualityChange","newQuality","currentPos","handleSubtitleChange","subtitleId","track","selectedTrack","getCurrentSubtitleLabel","subtitle","getVideoSource","getVideoUrl","controlsVariants","infoVariants","getAssetUrl","motion","X","Play","Users","Settings","rec","ContentCard"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}