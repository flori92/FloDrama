AWSTemplateFormatVersion: '2010-09-09'
Description: 'Configuration CloudFront sécurisée pour FloDrama hébergé sur GitHub Pages'

Parameters:
  DomainName:
    Type: String
    Default: flodrama.com
    Description: Nom de domaine principal
  
  AlternateDomainNames:
    Type: String
    Default: www.flodrama.com
    Description: Noms de domaine alternatifs (séparés par des virgules)
  
  GitHubPagesOrigin:
    Type: String
    Default: flori92.github.io
    Description: Nom d'hôte GitHub Pages
    
  CertificateArn:
    Type: String
    Description: ARN du certificat SSL préexistant dans ACM (région us-east-1)

Resources:
  # Fonction Lambda pour les en-têtes de sécurité
  SecurityHeadersFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: security-headers.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs16.x
      Code:
        ZipFile: |
          'use strict';
          exports.handler = async (event) => {
            const response = event.Records[0].cf.response;
            const headers = response.headers;
            
            // Strict-Transport-Security (HSTS)
            headers['strict-transport-security'] = [{
              key: 'Strict-Transport-Security',
              value: 'max-age=31536000; includeSubDomains; preload'
            }];
            
            // X-Content-Type-Options
            headers['x-content-type-options'] = [{
              key: 'X-Content-Type-Options',
              value: 'nosniff'
            }];
            
            // X-Frame-Options
            headers['x-frame-options'] = [{
              key: 'X-Frame-Options',
              value: 'SAMEORIGIN'
            }];
            
            // X-XSS-Protection
            headers['x-xss-protection'] = [{
              key: 'X-XSS-Protection',
              value: '1; mode=block'
            }];
            
            // Referrer-Policy
            headers['referrer-policy'] = [{
              key: 'Referrer-Policy',
              value: 'strict-origin-when-cross-origin'
            }];
            
            // Content-Security-Policy
            headers['content-security-policy'] = [{
              key: 'Content-Security-Policy',
              value: "default-src 'self'; script-src 'self' https://cdn.jsdelivr.net https://www.google-analytics.com 'unsafe-inline'; style-src 'self' https://cdn.jsdelivr.net 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https://cdn.jsdelivr.net; connect-src 'self' https://api.flodrama.com https://www.google-analytics.com; media-src 'self' blob: https://cdn.flodrama.com; frame-ancestors 'self'; upgrade-insecure-requests;"
            }];
            
            // Permissions-Policy
            headers['permissions-policy'] = [{
              key: 'Permissions-Policy',
              value: 'camera=(), microphone=(), geolocation=(), interest-cohort=()'
            }];
            
            // Ne pas écraser les en-têtes CORS existants
            if (!headers['access-control-allow-origin']) {
              headers['access-control-allow-origin'] = [{
                key: 'Access-Control-Allow-Origin',
                value: '*'
              }];
            }
            
            return response;
          }
      Description: Ajoute des en-têtes de sécurité HTTP aux réponses CloudFront
      MemorySize: 128
      Timeout: 5
  
  # Rôle IAM pour la fonction Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - edgelambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  
  # Version de la fonction Lambda pour CloudFront
  SecurityHeadersFunctionVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref SecurityHeadersFunction
      Description: Version pour CloudFront Edge
  
  # Distribution CloudFront
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
          - !Ref AlternateDomainNames
        Origins:
          - Id: GitHubPagesOrigin
            DomainName: !Ref GitHubPagesOrigin
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
              OriginSSLProtocols:
                - TLSv1.2
                - TLSv1.3
        DefaultCacheBehavior:
          TargetOriginId: GitHubPagesOrigin
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
            Headers:
              - Origin
              - Access-Control-Request-Method
              - Access-Control-Request-Headers
          LambdaFunctionAssociations:
            - EventType: origin-response
              LambdaFunctionARN: !Ref SecurityHeadersFunctionVersion
          DefaultTTL: 3600
          MinTTL: 0
          MaxTTL: 86400
        Enabled: true
        HttpVersion: http2and3
        IPV6Enabled: true
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 300

Outputs:
  CloudFrontDistributionId:
    Description: ID de la distribution CloudFront
    Value: !Ref CloudFrontDistribution
  
  CloudFrontDomainName:
    Description: Nom de domaine CloudFront
    Value: !GetAtt CloudFrontDistribution.DomainName
